openapi: 3.0.0
info:
  title: Swagger-API
  description: Swagger Api Tool For AWS API Gateway
  version: 1.0.0
  contact:
    email: ckorde@ccrn.com
servers:
  - url: '{schema}://{host}/{base_api}'
    description: base url for api
    variables:
      schema:
        default: https
      host: 
        default: a2a4d71ry9.execute-api.ap-south-1.amazonaws.com
      base_api: 
        default: dev
x-amazon-apigateway-cors:
  allowOrigins:
  - https://a2a4d71ry9.execute-api.ap-south-1.amazonaws.com/dev
  allowCredentials: true
  exposeHeaders:
  - x-apigateway-header
  - x-amz-date
  - content-type
  maxAge: 3600
  allowMethods:
  - GET
  - OPTIONS
  - POST
  allowHeaders:
  - x-apigateway-header
  - x-amz-date
  - content-type
paths:
  "/users":
    post:
      tags:
      - users
      summary: Add new user
      description: ''
      operationId: addUser
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml      
      parameters: []
      requestBody:
        description: Add user request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#definitions/AddUsers"
      responses:
        '200':
          description: Success
          schema:
            $ref: "#definitions/appResponse"
        default:
          description: Error
          schema:
            $ref: "#definitions/errorResponse"
    patch:
      tags:
      - users
      summary: Update an existing user details
      description: ''
      operationId: updateUsers
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters: []
      requestBody:
        description: Add user request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#definitions/UpdateUsers"
      responses:
        '200':
          description: Success
          schema:
            $ref: "#definitions/appResponse"
        default:
          description: Error
          schema:
            $ref: "#definitions/errorResponse"
    get:
      tags:
      - users
      summary: Find users by ID
      description: Returns a single user from id
      operationId: getUserById
      produces:
      - application/json
      - application/xml      
      parameters:
      - name: id
        in: query
        description: users id
        required: true
        example: 1
      - name: Access-Control-Allow-Origin
        in: header
        description: Access-Control-Allow-Origin
        required: true
        example: '*'
      responses:
        200:
          description: Success
          schema:
            $ref: "#definitions/appResponse"
        default:
          description: Error
          schema:
            $ref: "#definitions/errorResponse"
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {"statusCode" : 200}
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST,GET,PATCH,DELETE'"
              method.response.header.Access-Control-Allow-Origin: "'https://a2a4d71ry9.execute-api.ap-south-1.amazonaws.com/dev'"
    delete:
      tags:
      - users
      summary: Deletes a users
      description: ''
      operationId: deleteUsers
      produces:
      - application/json
      - application/xml
      parameters: []
      requestBody:
        description: Add user request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#definitions/DeleteUser"
      responses:
        '200':
          description: Success
          schema:
            $ref: "#definitions/appResponse"
        default:
          description: Error
          schema:
            $ref: "#definitions/errorResponse"
  "/users-list":
    get:
      tags:
      - users-details
      summary: Find users by ID
      description: Returns a single user from id
      operationId: getUserById
      produces:
      - application/json
      - application/xml
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: "#definitions/appResponse"
        default:
          description: Error
          schema:
            $ref: "#definitions/errorResponse"
  "/{proxy+}":
    x-amazon-apigateway-any-method:
        produces:
        - application/json
        parameters:
        - name: id
          in: query
          required: true
          type: string
          example: 2
        responses: {}
        x-amazon-apigateway-integration:
          uri: arn:aws:execute-api:ap-south-1:609088496770:a2a4d71ry9/*/GET/users-list
          httpMethod: GET
          type: aws_proxy
definitions:
  appResponse:
    required: message
    properties:
      message:
        type: string
      code:
        type: number
  errorResponse:
    required: message
    properties:
      message:
        type: string
  AddUsers:
    type: object
    properties:
      id:
        type: string
      city:
        type: string
      name:
        type: string     
    example:
      id: "5"
      city: "Amravati"
      name: "Chetan Patil"
  UpdateUsers:
    type: object
    properties:
      id:
        type: integer
      updateKey:
        type: string
      updateValue:
        type: string
    example:
      id: "1"
      updateKey: "name"
      updateValue: "Chetan Patil Korde"
  DeleteUser:
    type: object
    properties:
      id:
        type: number
    example:
      id: "1"
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
